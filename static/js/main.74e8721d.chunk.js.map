{"version":3,"sources":["socketConfig.js","theme.js","components/Container.js","components/Navbar.js","components/Home.js","components/CreateGame.js","components/JoinGame.js","components/Countdown.js","components/StartBtn.js","components/DisplayWords.js","components/TypingBox.js","components/GameCode.js","components/Scoreboard.js","components/ProgressBar.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","breakpoints","createBreakpoints","sm","md","lg","xl","theme","extendTheme","colors","black","fonts","mono","icons","logo","path","width","height","viewBox","fill","xmlns","d","Container","props","colorMode","useColorMode","direction","alignItems","justifyContent","bg","light","dark","color","Navbar","toggleColorMode","isDark","useState","display","changeDisplay","position","top","left","align","gridGap","to","as","variant","w","my","fontWeight","aria-label","size","mr","icon","Hamburger","onClick","ml","right","isChecked","onChange","h","zIndex","pos","overflowY","flexDir","justify","mt","mb","Close","p","Home","history","useHistory","fontSize","bgGradient","bgClip","padding","textAlign","push","CreateGame","username","setUsername","onSubmit","e","preventDefault","emit","isRequired","type","name","target","value","placeholder","className","JoinGame","gameID","userInput","setUserInput","console","log","Countdown","countDown","msg","timer","setTimer","useEffect","on","data","removeListener","StartBtn","player","showBtn","setShowBtn","isPartyLeader","playerID","_id","typedCorrectlyStyle","currentStyle","getTypedWords","words","typedWords","slice","currentWordIndex","join","style","getCurrentWord","getUntypedWords","wordsUntyped","length","DisplayWords","TypingBox","isOpen","isOver","textInput","useRef","current","focus","readOnly","charAt","ref","GameCode","copySuccess","setCopySuccess","textInputRef","children","Copy","select","document","execCommand","setTimeout","alignText","status","borderRadius","Scoreboard","scoreboard","players","filter","WPM","sort","a","b","getScoreboard","colorScheme","isNumeric","map","index","nickname","accuracy","calculatePercentage","wordsLength","toFixed","ProgressBar","percentage","transitionEffect","transition","hasStripe","playerObj","Game","gameState","find","socketID","id","findPlayer","m","r","spacing","gameOpen","App","setGameState","game","removeAllListeners","resetCSS","options","useSystemColorMode","class","component","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.74e8721d.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\nconst socket  = io('https://blooming-oasis-12886.herokuapp.com/');\r\nexport default socket;","import { extendTheme } from '@chakra-ui/react'\r\nimport { createBreakpoints } from '@chakra-ui/theme-tools'\r\n\r\nconst fonts = { mono: `'Menlo', monospace` }\r\n\r\nconst breakpoints = createBreakpoints({\r\n    sm: '40em',\r\n    md: '52em',\r\n    lg: '64em',\r\n    xl: '80em',\r\n})\r\n\r\nconst theme = extendTheme({\r\n    colors: {\r\n        black: '#16161D',\r\n    },\r\n    fonts,\r\n    breakpoints,\r\n    icons: {\r\n        logo: {\r\n        path: (\r\n            <svg\r\n            width=\"3000\"\r\n            height=\"3163\"\r\n            viewBox=\"0 0 3000 3163\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n            <rect width=\"3000\" height=\"3162.95\" fill=\"none\" />\r\n            <path\r\n            d=\"M1470.89 1448.81L2170 2488.19H820V706.392H2170L1470.89 1448.81ZM1408.21 1515.    37L909.196 2045.3V2393.46H1998.84L1408.21 1515.37Z\"\r\n            fill=\"currentColor\"\r\n            />\r\n            </svg>\r\n        ),\r\n        viewBox: '0 0 3000 3163',\r\n        },\r\n    },\r\n})\r\n\r\nexport default theme","import { Flex, useColorMode } from '@chakra-ui/react'\r\n\r\nexport const Container = (props) => {\r\n    const { colorMode } = useColorMode();\r\n\r\n    const bgColor = { light: 'gray.50', dark: 'gray.900' };\r\n\r\n    const color = { light: 'black', dark: 'white' };\r\n    return (\r\n        <Flex\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        bg={bgColor[colorMode]}\r\n        color={color[colorMode]}\r\n        {...props}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport  { useState } from 'react';\r\nimport { \r\n    useColorMode,\r\n    Switch,\r\n    Flex,\r\n    Button,\r\n    Box,\r\n    IconButton \r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon,CloseIcon } from '@chakra-ui/icons';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    \r\n} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const isDark = colorMode === 'dark';\r\n    const color = { light: 'black', dark: 'white' };\r\n    const bgColor = { light: 'gray.50', dark: 'gray.900' };\r\n    const [display,changeDisplay] = useState('none');\r\n\r\n    return (\r\n        <Flex>\r\n            <Flex\r\n                position=\"fixed\"\r\n                top=\"1rem\"\r\n                left=\"2rem\"\r\n                color={color[colorMode]}\r\n                align='center'\r\n            >\r\n                    \r\n                <Flex\r\n                    display={['none','none','flex','flex']}\r\n                    gridGap=\"1rem\"\r\n        \r\n                >\r\n                    <Link to=\"/\"><Button  as=\"a\" variant=\"ghost\" w=\"100%\" my={1} fontWeight=\"400\">Home</Button></Link>\r\n                    <Link to=\"/game\"><Button  as=\"a\" variant=\"ghost\" w=\"100%\" my={1} fontWeight=\"400\">Game</Button></Link>\r\n                </Flex>\r\n                <IconButton\r\n                    aria-label = \"Hamburger Icon\"\r\n                    size = \"md\"\r\n                    mr = {2}\r\n                    icon = {<HamburgerIcon/>}\r\n                    display = {['flex','flex','none','none']}\r\n                    onClick = {()=>changeDisplay('flex')}\r\n                />\r\n                <Switch\r\n                    ml={4}\r\n                    position=\"fixed\"\r\n                    top=\"2rem\"\r\n                    right=\"2rem\"\r\n                    isChecked={isDark}\r\n                    onChange={toggleColorMode}\r\n                />\r\n            </Flex>\r\n            <Flex\r\n                w=\"100vw\"\r\n                h=\"100vh\"\r\n                bg={bgColor[colorMode]}\r\n                zIndex={20}\r\n                pos=\"fixed\"\r\n                top=\"0\"\r\n                left=\"0\"\r\n                overflowY=\"auto\"\r\n                flexDir=\"column\"\r\n                display = {display}\r\n            >\r\n                <Flex justify=\"flex-start\">\r\n                    <IconButton\r\n                        mt=\"1rem\"\r\n                        ml=\"2rem\"\r\n                        mb=\"1rem\"\r\n                        aria-label = \"X Icon\"\r\n                        size = \"md\"\r\n                        icon = {<CloseIcon/>}\r\n                        onClick = {()=>changeDisplay('none')}\r\n                    />\r\n                </Flex>\r\n                <Flex\r\n                    flexDir = \"column\"\r\n                    align=\"center\"\r\n                    w=\"100vw\"\r\n                >\r\n                    <Link to=\"/\"><Button  as=\"a\" variant=\"ghost\" w=\"100vw\"  p={24}     fontWeight=\"400\" onClick = {()=>changeDisplay('none')}>Home</Button></Link>\r\n                    <Link to=\"/game\"><Button  as=\"a\" variant=\"ghost\" w=\"100vw\"  p={24}    fontWeight=\"400\" onClick = {()=>changeDisplay('none')}>Game</Button></Link>\r\n                </Flex>\r\n            </Flex>\r\n        </Flex>\r\n    \r\n    )\r\n}","import { Flex, Heading, Button, Stack } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Home = (props) => {\r\n\tlet history = useHistory();\r\n\treturn (\r\n\t\t<Flex justifyContent=\"center\" alignItems=\"top\" height=\"100vh\">\r\n\t\t\t<Stack>\r\n\t\t\t\t<Heading\r\n\t\t\t\t\tfontSize=\"8vw\"\r\n\t\t\t\t\tbgGradient=\"linear(to-l, #56CCF2, #2F80ED)\"\r\n\t\t\t\t\tbgClip=\"text\"\r\n\t\t\t\t\tpadding=\"2rem\"\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Heading>\r\n\t\t\t\t<Flex justify=\"center\" gridGap={6}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfontWeight=\"400\"\r\n\t\t\t\t\t\tonClick={() => history.push(\"/game/create\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfontWeight=\"400\"\r\n\t\t\t\t\t\tonClick={() => history.push(\"/game/join\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tJoin Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Stack>\r\n\t\t</Flex>\r\n\t);\r\n};\r\n","import React,{ useState } from 'react';\r\nimport socket from '../socketConfig';\r\nimport { \r\n    Flex,\r\n    Stack,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input,\r\n    Button\r\n} from '@chakra-ui/react'\r\n\r\nexport const CreateGame = (props)=> {\r\n    const [username,setUsername] = useState(\"\");\r\n    const onChange = (e)=>{\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        socket.emit('create-game',username);\r\n    }\r\n    return (\r\n        <Flex justifyContent=\"center\" alignItems=\"top\" height=\"100vh\">\r\n            <Stack>\r\n                <Heading\r\n                fontSize=\"8vw\"\r\n                bgGradient=\"linear(to-l, #56CCF2,   #2F80ED)\"\r\n                bgClip=\"text\"\r\n                padding=\"2rem\"\r\n                textAlign=\"center\"\r\n                >\r\n                    Create Game\r\n                </Heading>\r\n                <form onSubmit={onSubmit}>\r\n\r\n                    <FormControl isRequired >\r\n                        <FormLabel>Enter Username</ FormLabel>\r\n                        <Input type=\"text\" name =   \"username\" onChange=  {onChange} value =    {username} placeholder =   \"Enter your Username\"     className =     \"form-control\"/>\r\n                        <Button mt={4} fontWeight = \"400\" type = \"submit\" >Start Game</   Button>\r\n                    </FormControl>\r\n                </form>\r\n            </Stack>\r\n        </Flex>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n\tHeading,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tFormErrorMessage,\r\n\tFormHelperText,\r\n\tInput,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const JoinGame = (props) => {\r\n\tconst [userInput, setUserInput] = useState({gameID : \"\",username : \"\"});\r\n\tconst onChange = (e) => {\r\n\t\tsetUserInput({...userInput,[e.target.name]:e.target.value});\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n        console.log(userInput);\r\n\t\tsocket.emit(\"join-game\", userInput);\r\n\t};\r\n    \r\n\treturn (\r\n\t\t<Flex justifyContent=\"center\" alignItems=\"top\" height=\"100vh\">\r\n\t\t\t<Stack>\r\n\t\t\t\t<Heading\r\n\t\t\t\t\tfontSize=\"8vw\"\r\n\t\t\t\t\tbgGradient=\"linear(to-l, #56CCF2,   #2F80ED)\"\r\n\t\t\t\t\tbgClip=\"text\"\r\n\t\t\t\t\tpadding=\"2rem\"\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tJoin Game\r\n\t\t\t\t</Heading>\r\n                \r\n\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t<FormControl isRequired>\r\n\t\t\t\t\t\t<FormLabel>Enter Game ID</FormLabel> \r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"gameID\"\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tvalue={userInput.gameID}\r\n\t\t\t\t\t\t\tplaceholder=\"Enter a Game ID\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormLabel mt={4}>Enter Username</FormLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tvalue={userInput.username}\r\n\t\t\t\t\t\t\tplaceholder=\"Enter your Username\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button mt={4} fontWeight=\"400\" type=\"submit\">\r\n\t\t\t\t\t\t\tJoin Game\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</form>\r\n\t\t\t</Stack>\r\n\t\t</Flex>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n    Text,\r\n\tHeading,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tFormErrorMessage,\r\n\tFormHelperText,\r\n\tInput,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const Countdown = (props) => {\r\n    const [timer,setTimer] = useState({countDown:\"\",msg:\"\"});\r\n    \r\n    useEffect(()=>{\r\n        setTimer({\r\n\t\t\tcountDown: \"∞\",\r\n\t\t\tmsg: \"To get the game going, click the start button below.\",\r\n\t\t});\r\n        socket.on('timer',(data)=>{\r\n            setTimer(data);\r\n        });\r\n        socket.on('done',()=>{\r\n            socket.removeListener('timer');\r\n        });\r\n    },[]);\r\n    const {countDown,msg} = timer;\r\n\r\n\treturn (\r\n\t\t<Stack align=\"center\" justify=\"center\">\r\n\t\t\t<Text fontSize=\"lg\">{countDown}</Text>\r\n\t\t\t<Text>{msg}</Text>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n","import React, { useState, setState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n\tHeading,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tFormErrorMessage,\r\n\tFormHelperText,\r\n\tInput,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\nexport const StartBtn = ({player, gameID}) => {\r\n    const [showBtn, setShowBtn ] = useState(true);\r\n    const { isPartyLeader } = player;\r\n\tconst startMessage=e=>{\r\n        socket.emit('timer',{playerID:player._id,gameID});\r\n        setShowBtn(false);\r\n    };\r\n    return (\r\n\t\tisPartyLeader && showBtn ? <Button fontWeight=\"400\" type=\"button\" onClick={startMessage}>Start</Button> : null\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n\tText,\r\n\tHeading,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tFormErrorMessage,\r\n\tFormHelperText,\r\n\tInput,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst typedCorrectlyStyle = {\r\n\t\"backgroundColor\": \"#72b186\"\r\n};\r\nconst currentStyle = {\r\n    \"text-decoration\":\"underline\",\r\n}\r\nconst getTypedWords=(words,player)=>{\r\n    let typedWords = words.slice(0,player.currentWordIndex);\r\n    typedWords = typedWords.join(\" \");\r\n    return <span style = {typedCorrectlyStyle}>{typedWords} </span>\r\n};\r\nconst getCurrentWord = (words,player)=>{\r\n    return <span style = {currentStyle}>{words[player.currentWordIndex]} </span>\r\n}\r\nconst getUntypedWords = (words,player)=>{\r\n    let wordsUntyped = words.slice(player.currentWordIndex+1,words.length);\r\n    wordsUntyped = wordsUntyped.join(\" \");\r\n    return <span> {wordsUntyped}</span>\r\n}\r\nexport const DisplayWords = ({words,player}) => {\r\n\treturn (\r\n\t\t<Text>\r\n\t\t\t<>\r\n\t\t\t\t{getTypedWords(words, player)}\r\n\t\t\t\t{getCurrentWord(words, player)}\r\n\t\t\t\t{getUntypedWords(words, player)}\r\n\t\t\t</>\r\n\t\t</Text>\r\n\t);\r\n};\r\n","import React, {useState,useRef,useEffect} from \"react\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n\tText,\r\n\tHeading,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tFormErrorMessage,\r\n\tFormHelperText,\r\n\tInput,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\nimport socket from \"../socketConfig\";\r\n\r\nexport const TypingBox = ({isOpen,isOver,gameID}) => {\r\n    const [userInput,setUserInput] = useState(\"\");\r\n    const textInput = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(!isOpen){\r\n            textInput.current.focus();\r\n        }\r\n    },[isOpen]);\r\n\r\n    useEffect(()=>{\r\n        socket.on(\"done\", () => {\r\n\t\t\tsocket.removeListener(\"timer\");\r\n\t\t});\r\n    },[]);\r\n\r\n    const resetForm = ()=>{\r\n        setUserInput(\"\");\r\n    }\r\n    const onChange = (e)=>{\r\n        let value = e.target.value;\r\n        let lastChar = value.charAt(value.length-1);\r\n        if(lastChar===\" \"){\r\n            socket.emit('userInput',{userInput,gameID});\r\n            resetForm();\r\n        }else{\r\n            setUserInput(value);\r\n            \r\n        }\r\n    }\r\n    return (\r\n\t\t<Stack w=\"100%\">\r\n\t\t\t<form>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\treadOnly={isOpen || isOver}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tvalue={userInput}\r\n\t\t\t\t\t\tref={textInput}\r\n                        placeholder = \"Type the words above here!\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</form>\r\n\t\t</Stack>\r\n\t);\r\n}","import React, { useState, useRef } from \"react\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n    useDisclosure,\r\n\tStack,\r\n\tBox,\r\n\tText,\r\n\tHeading,\r\n    IconButton,\r\n    Input,\r\n    InputGroup,\r\n    InputRightAddon,\r\n    Alert,\r\n    ScaleFade\r\n\r\n} from \"@chakra-ui/react\";\r\nimport { CopyIcon, AlertIcon } from \"@chakra-ui/icons\";\r\n\r\n\r\n\r\nexport const GameCode = ({ gameID }) => {\r\n    const [copySuccess,setCopySuccess] = useState(false);\r\n    const textInputRef = useRef(null);\r\n    const copy = (e) => {\r\n\t\ttextInputRef.current.select();\r\n        document.execCommand(\"copy\");\r\n        setCopySuccess(true);\r\n        setTimeout(()=>{\r\n            setCopySuccess(false);\r\n        },3000)\r\n\t};\r\n    console.log(gameID);\r\n\treturn (\r\n\t\t<Stack w=\"75%\">\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Input type=\"text\" ref={textInputRef} value={gameID} readOnly />\r\n\t\t\t\t<InputRightAddon\r\n\t\t\t\t\tchildren={<IconButton icon={<CopyIcon />}  onClick={copy} />}\r\n\t\t\t\t/>\r\n\t\t\t</InputGroup>\r\n\t\t\t{copySuccess ? (\r\n\t\t\t\t\t<Alert alignText=\"center\" status=\"success\" borderRadius={6}>\r\n\t\t\t\t\t\tCode Copied!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t) : null}\r\n\t\t</Stack>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n\tBox,\r\n\tText,\r\n\tHeading,\r\n\tTable,\r\n\tThead,\r\n\tTbody,\r\n\tTfoot,\r\n\tTr,\r\n\tTh,\r\n\tTd,\r\n\tTableCaption,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst getScoreboard = (players)=>{\r\n    const scoreboard = players.filter(player=>player.WPM !== -1);\r\n    return scoreboard.sort((a,b)=>a.WPM>b.WPM?-1:b.WPM>a.WPM?1:0);\r\n}\r\nexport const Scoreboard = ({players}) => {\r\n    const scoreboard = getScoreboard(players);\r\n    if(scoreboard.length===0){\r\n        return null;\r\n    }\r\n\treturn (\r\n\t\t<Stack>\r\n\t\t\t<Heading\r\n\t\t\t\tbgGradient=\"linear(to-l, #56CCF2,   #2F80ED)\"\r\n\t\t\t\tbgClip=\"text\"\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t>\r\n\t\t\t\tScoreboard\r\n\t\t\t</Heading>\r\n\t\t\t<Table variant=\"striped\" size=\"lg\" colorScheme=\"cyan\">\r\n\t\t\t\t<Thead>\r\n\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t<Th>#</Th>\r\n\t\t\t\t\t\t<Th>Player Username</Th>\r\n\t\t\t\t\t\t<Th isNumeric>WPM</Th>\r\n\t\t\t\t\t\t<Th isNumeric>Accuracy</Th>\r\n\t\t\t\t\t</Tr>\r\n\t\t\t\t</Thead>\r\n\t\t\t\t<Tbody>\r\n\t\t\t\t\t{scoreboard.map((player, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t<Th>{index + 1}</Th>\r\n\t\t\t\t\t\t\t\t<Td>{player.nickname}</Td>\r\n\t\t\t\t\t\t\t\t<Td>{player.WPM}</Td>\r\n\t\t\t\t\t\t\t\t<Td>{player.accuracy}%</Td>\r\n\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Tbody>\r\n\t\t\t</Table>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../socketConfig\";\r\nimport {\r\n\tFlex,\r\n\tStack,\r\n    Box,\r\n\tText,\r\n\tHeading,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tFormErrorMessage,\r\n\tFormHelperText,\r\n\tInput,\r\n    Progress,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst calculatePercentage = (player, wordsLength) => {\r\n\tif (player.currentWordIndex !== 0) {\r\n\t\treturn ((player.currentWordIndex / wordsLength) * 100).toFixed(2);\r\n\t}\r\n\treturn 0;\r\n};\r\n\r\nexport const ProgressBar = ({players,player,wordsLength}) => {\r\n    const percentage = calculatePercentage(player,wordsLength);\r\n    const transitionEffect = {\r\n        transition: '400ms cubic-bezier(0.26, 0.8, 0.29, 0.98)'\r\n    }\r\n\treturn (\r\n\t\t<Box justify=\"center\" w=\"100%\">\r\n\t\t\t{\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Heading align=\"left\" as=\"h3\" size=\"lg\" mb={2}>\r\n\t\t\t\t\t\t{player.nickname}\r\n\t\t\t\t\t</Heading>\r\n\t\t\t\t\t<Box key={player._id} align=\"left\" mb={4}>\r\n\t\t\t\t\t\t<Progress\r\n\t\t\t\t\t\t\tcolorScheme=\"cyan\"\r\n\t\t\t\t\t\t\thasStripe\r\n\t\t\t\t\t\t\tvalue={percentage}\r\n                            borderRadius={6}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t{players.map((playerObj) => {\r\n\t\t\t\tconst percentage = calculatePercentage(playerObj, wordsLength);\r\n\t\t\t\treturn playerObj._id !== player._id ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Heading align=\"left\" as=\"h4\" size=\"md\" mb={2}>\r\n\t\t\t\t\t\t\t{playerObj.nickname}\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Box key={playerObj._id} align=\"left\" mb={4}>\r\n\t\t\t\t\t\t\t<Progress\r\n\t\t\t\t\t\t\t\tcolorScheme=\"cyan\"\r\n\t\t\t\t\t\t\t\thasStripe\r\n\t\t\t\t\t\t\t\tvalue={percentage}\r\n\t\t\t\t\t\t\t\tstyle={transitionEffect}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : null;\r\n\t\t\t})}\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import React,{ useState, setState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Countdown } from './Countdown';\r\nimport { StartBtn } from './StartBtn';\r\nimport { DisplayWords } from './DisplayWords';\r\nimport { TypingBox } from './TypingBox';\r\nimport { GameCode } from './GameCode';\r\nimport { Scoreboard } from './Scoreboard';\r\nimport { ProgressBar } from './ProgressBar';\r\nimport socket from '../socketConfig';\r\nimport { \r\n    Flex,\r\n    Stack,\r\n    Heading,\r\n    Container,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input,\r\n    Button\r\n} from '@chakra-ui/react'\r\n\r\nconst findPlayer = players=>{\r\n    return players.find(player=> player.socketID === socket.id);\r\n}\r\nexport const Game = ({gameState})=> {\r\n    console.log(gameState);\r\n    const { _id,players,words,isOpen,isOver } = gameState;\r\n    const player = findPlayer(players);\r\n    if(_id === \"\"){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Flex\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\talign=\"center\"\r\n\t\t\talignItems=\"top\"\r\n\t\t\theight=\"100vh\"\r\n\t\t>\r\n\t\t\t<Stack align=\"center\">\r\n\t\t\t\t<Heading\r\n\t\t\t\t\tfontSize=\"8vw\"\r\n\t\t\t\t\tbgGradient=\"linear(to-l, #56CCF2,   #2F80ED)\"\r\n\t\t\t\t\tbgClip=\"text\"\r\n\t\t\t\t\tpadding=\"2rem\"\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLive Game\r\n\t\t\t\t</Heading>\r\n\t\t\t\t<Container align=\"center\" m=\"0 auto\" r>\r\n\t\t\t\t\t<Stack justify=\"center\" align=\"center\" spacing={6}>\r\n\t\t\t\t\t\t<Flex>\r\n\t\t\t\t\t\t\t<DisplayWords words={words} player={player} />\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tplayers={players}\r\n\t\t\t\t\t\t\tplayer={player}\r\n\t\t\t\t\t\t\twordsLength={words.length}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TypingBox\r\n\t\t\t\t\t\t\tisOpen={isOpen}\r\n\t\t\t\t\t\t\tisOver={isOver}\r\n\t\t\t\t\t\t\tgameID={_id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Countdown />\r\n\r\n\t\t\t\t\t\t<StartBtn as=\"button\" player={player} gameID={_id} />\r\n\r\n\t\t\t\t\t\t<GameCode gameID={_id} gameOpen={isOpen} />\r\n\t\t\t\t\t\t<Scoreboard players={players} />\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Container>\r\n\t\t\t</Stack>\r\n\t\t</Flex>\r\n\t);\r\n}","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n\tChakraProvider,\n\tColorModeProvider,\n\tText,\n\tHeader,\n\tFlex,\n} from \"@chakra-ui/react\";\nimport socket from \"./socketConfig\";\nimport theme from \"./theme\";\nimport { Container } from \"./components/Container\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Home } from \"./components/Home\";\nimport { CreateGame } from \"./components/CreateGame\";\nimport { JoinGame } from \"./components/JoinGame\";\nimport { Game } from \"./components/Game\";\n\nexport default function App() {\n    const history = useHistory();\n\tconst [gameState, setGameState] = useState({\n\t\t_id: \"\",\n\t\tisOpen: false,\n\t\tplayers: [],\n\t\twords: [],\n\t});\n\n\tuseEffect(() => {\n\t\tsocket.on(\"updateGame\", (game) => {\n\t\t\tconsole.log(game);\n\t\t\tsetGameState(game);\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.removeAllListeners();\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (gameState._id !== \"\") {\n\t\t\thistory.push(`/game/${gameState._id}`);\n\t\t}\n\t}, [gameState._id]);\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<ChakraProvider resetCSS theme={theme}>\n\t\t\t\t<ColorModeProvider options={{ useSystemColorMode: true }}>\n\t\t\t\t\t<Container height=\"100vh\">\n\t\t\t\t\t\t<Navbar />\n\n\t\t\t\t\t\t<Switch class=\"switch\">\n\t\t\t\t\t\t\t<Route path=\"/\" component={Home} />\n\t\t\t\t\t\t\t<Route path=\"/typetimerweb\" component={Home} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/#/game/create\"\n\t\t\t\t\t\t\t\tcomponent={CreateGame}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/#/game/join\"\n\t\t\t\t\t\t\t\tcomponent={JoinGame}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/#/game/:gameID\"\n\t\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t\t<Game {...props} gameState={gameState} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t></Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t</ColorModeProvider>\n\t\t\t</ChakraProvider>\n\t\t</Router>\n\t);\n}","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.querySelector(\"#root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}